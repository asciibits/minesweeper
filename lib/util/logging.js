export var LoggingLevel;
(function (LoggingLevel) {
    LoggingLevel[LoggingLevel["TRACE"] = 5] = "TRACE";
    LoggingLevel[LoggingLevel["DEBUG"] = 4] = "DEBUG";
    LoggingLevel[LoggingLevel["INFO"] = 3] = "INFO";
    LoggingLevel[LoggingLevel["WARN"] = 2] = "WARN";
    LoggingLevel[LoggingLevel["ERROR"] = 1] = "ERROR";
    LoggingLevel[LoggingLevel["NONE"] = 0] = "NONE";
})(LoggingLevel || (LoggingLevel = {}));
let loggingLevel = LoggingLevel.WARN;
export function setLoggingLevel(level) {
    loggingLevel = level;
}
export function log(level, message, ...params) {
    if (level <= loggingLevel) {
        let logger;
        switch (level) {
            case LoggingLevel.INFO:
                logger = console.info;
                break;
            case LoggingLevel.WARN:
                logger = console.warn;
                break;
            case LoggingLevel.ERROR:
                logger = console.error;
                break;
            default:
                logger = console.log;
                break;
        }
        logger(message, ...params.map(p => (typeof p === 'function' ? p() : p)));
    }
}
export function trace(message, ...params) {
    log(LoggingLevel.TRACE, message, ...params);
}
export function debug(message, ...params) {
    log(LoggingLevel.DEBUG, message, ...params);
}
export function info(message, ...params) {
    log(LoggingLevel.INFO, message, ...params);
}
export function warn(message, ...params) {
    log(LoggingLevel.WARN, message, ...params);
}
export function error(message, ...params) {
    log(LoggingLevel.ERROR, message, ...params);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2xvZ2dpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFOLElBQVksWUFPWDtBQVBELFdBQVksWUFBWTtJQUN0QixpREFBUyxDQUFBO0lBQ1QsaURBQVMsQ0FBQTtJQUNULCtDQUFRLENBQUE7SUFDUiwrQ0FBUSxDQUFBO0lBQ1IsaURBQVMsQ0FBQTtJQUNULCtDQUFRLENBQUE7QUFDVixDQUFDLEVBUFcsWUFBWSxLQUFaLFlBQVksUUFPdkI7QUFFRCxJQUFJLFlBQVksR0FBaUIsWUFBWSxDQUFDLElBQUksQ0FBQztBQUNuRCxNQUFNLFVBQVUsZUFBZSxDQUFDLEtBQW1CO0lBQ2pELFlBQVksR0FBRyxLQUFLLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxHQUFHLENBQ2pCLEtBQW1CLEVBQ25CLE9BQWUsRUFDZixHQUFHLE1BQWlCO0lBRXBCLElBQUksS0FBSyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzFCLElBQUksTUFBK0IsQ0FBQztRQUNwQyxRQUFRLEtBQUssRUFBRSxDQUFDO1lBQ2QsS0FBSyxZQUFZLENBQUMsSUFBSTtnQkFDcEIsTUFBTSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7Z0JBQ3RCLE1BQU07WUFDUixLQUFLLFlBQVksQ0FBQyxJQUFJO2dCQUNwQixNQUFNLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztnQkFDdEIsTUFBTTtZQUNSLEtBQUssWUFBWSxDQUFDLEtBQUs7Z0JBQ3JCLE1BQU0sR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO2dCQUN2QixNQUFNO1lBQ1I7Z0JBQ0UsTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7Z0JBQ3JCLE1BQU07UUFDVixDQUFDO1FBQ0QsTUFBTSxDQUFDLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzRSxDQUFDO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxLQUFLLENBQUMsT0FBZSxFQUFFLEdBQUcsTUFBaUI7SUFDekQsR0FBRyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUNELE1BQU0sVUFBVSxLQUFLLENBQUMsT0FBZSxFQUFFLEdBQUcsTUFBaUI7SUFDekQsR0FBRyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUNELE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBZSxFQUFFLEdBQUcsTUFBaUI7SUFDeEQsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUNELE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBZSxFQUFFLEdBQUcsTUFBaUI7SUFDeEQsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUNELE1BQU0sVUFBVSxLQUFLLENBQUMsT0FBZSxFQUFFLEdBQUcsTUFBaUI7SUFDekQsR0FBRyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQyJ9